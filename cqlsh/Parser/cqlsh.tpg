<% @TinyPG Namespace="cqlsh.Parser" Language="c#"  %>

EXIT			-> @"exit";
TRUE			-> "true";
FALSE			-> "false";
HELP			-> "help";
RESET			-> "reset";
[Skip] WHITESPACE 	-> @"\s+";
EOF               	-> @"^$";
STRING             	-> @"@?\""(\""\""|[^\""])*\""";
INTEGER	      	-> @"[0-9]+";
IDENTIFIER        	-> @"[a-zA-Z_][a-zA-Z0-9_]*";
ASSIGN            	-> @"=";
BANG			-> "!";
EVERYTHING		-> "[^!]*";

String			-> STRING { return Default($STRING); };
Integer		-> INTEGER { return int.Parse((string)$INTEGER); };
Bool			-> TRUE | FALSE { return null != $TRUE; };
Value			-> String | Integer | Bool { return Default($String, $Integer, $Bool); };
SetProperty 		-> IDENTIFIER ASSIGN Value { return new cqlsh.Commands.Assign($IDENTIFIER , $Value); };
Exit 			-> EXIT { return new cqlsh.Commands.Exit(); };
Help			-> HELP { return new cqlsh.Commands.Help(); };
Reset			-> RESET { return new cqlsh.Commands.Reset(); };
Command		-> Exit | SetProperty | Reset | Help { return Default($Exit, $SetProperty, $Reset, $Help); };
CqlCommand		-> EVERYTHING { return new cqlsh.Commands.CqlStatement((string)$EVERYTHING); };
Start 			-> ((BANG Command) | (CqlCommand)) EOF { return Default($Command, $CqlCommand); };
