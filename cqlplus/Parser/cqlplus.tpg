<% @TinyPG Namespace="cqlplus.Parser" Language="c#"  %>

[Skip] WHITESPACE 			-> @"\s+";
EOF               			-> @"^$";
STRING             			-> @"@?\""(\""\""|[^\""])*\""";
WORD                   		->  @"\b";
INTEGER	      			-> @"[+-]?[0-9]+";
IDENTIFIER        			-> @"[a-zA-Z_][a-zA-Z0-9_]*";
BANG					-> "!";
EVERYTHING				-> "[.]+";
EVERYTHING_BUT_START_WITH_BANG	-> "[^!]+[.]*";
MINUS					-> "-";
EQUAL					-> "=";

String					-> STRING {  var str = (string)$STRING;
                                    		str = str.Substring(1, str.Length-2);
                                    		return str; };
Identifier				-> IDENTIFIER { return $IDENTIFIER; };
Integer				-> INTEGER { return $INTEGER; };
Value					-> String| Identifier | Integer { return Default($String, $Identifier, $Integer); };

Parameters				-> (Identifier EQUAL Value)* 
						{ 
							var res = new Dictionary<string, string>();
							for(int i=0; $Identifier[i] != null; ++i)
							{
								var prmName = ((string)$Identifier[i]).ToLower();
								var prmValue = (string)$Value[i];
								res[prmName] = prmValue;
							}
							return res;
						};

CommandWithParameters		-> Identifier Parameters { return new cqlplus.Commands.ShellCommand((string)$Identifier, (Dictionary<string, string>)$Parameters); };
CqlCommand				-> EVERYTHING_BUT_START_WITH_BANG { return new cqlplus.Commands.CqlStatement((string)$EVERYTHING_BUT_START_WITH_BANG); };
Start					-> (BANG CommandWithParameters | CqlCommand) EOF { return Default($CommandWithParameters, $CqlCommand); }; 
